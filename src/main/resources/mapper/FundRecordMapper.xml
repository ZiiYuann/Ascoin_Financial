<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianli.fund.dao.FundRecordMapper">

    <select id="selectDistinctUidPage" resultType="com.tianli.management.vo.FundUserRecordVO">
        select
        distinct a.uid
        from
        fund_record a
        left join
        wallet_agent_product b on a.product_id = b.product_id
        <where>
            <if test="query.queryUid != null and query.queryUid != ''">
                a.uid like concat('%',#{query.queryUid},'%')
            </if>
            <if test="query.agentUId != null">
                and b.uid = #{query.agentUId}
            </if>
            <if test="query.agentId != null">
                and b.agent_id = #{query.agentId}
            </if>
        </where>
        order by a.create_time
    </select>


    <select id="selectHoldAmount" resultType="com.tianli.management.dto.AmountDto">
        SELECT sum(a.hold_amount) amount,
        coin
        FROM fund_record a
        left JOIN wallet_agent_product b on a.product_id = b.product_id
        <where>
            <if test="agentUId != null">
                b.uid = #{agentUId}
            </if>
            <if test="productId != null">
                and a.product_id = #{productId}
            </if>
            <if test="uid != null">
                and a.uid = #{uid}
            </if>
        </where>
        group by a.coin
    </select>

    <select id="selectHoldAmountSum" resultType="decimal">
        SELECT ifnull(sum(hold_amount),0)
        FROM fund_record
        <where>
            <if test="productId != null">
                product_id = #{productId}
            </if>
            <if test="uid != null">
                and uid = #{uid}
            </if>
        </where>
    </select>

    <select id="selectHoldUserCount" resultType="int">
        SELECT count(DISTINCT a.uid)

        FROM wallet_agent_product b
        INNER JOIN fund_record a on a.product_id = b.product_id
        <where>
            a.status = 'PROCESS'
            <if test="agentId != null">
                and b.agent_id = #{agentId}
            </if>
            <if test="productId != null">
                and b.product_id = #{productId}
            </if>
        </where>
    </select>

    <select id="selectFundUserHoldDto" resultType="com.tianli.management.dto.FundUserHoldDto">
        SELECT
        SUM(a.hold_amount) holdAmount,
        sum(b.interest_amount) interestAmount,
        sum(if(b.status = 1 or b.status =2, b.interest_amount,0)) waitInterestAmount,
        sum(if(b.status = 3, b.interest_amount,0)) payInterestAmount,
        a.coin
        FROM (select id,coin,sum(hold_amount) as hold_amount ,product_id from fund_record WHERE `status` = 'PROCESS'
        <where>
            <if test="queryUid != null and queryUid != ''">
                uid like concat('%',#{agentUId},'%')
            </if>
        </where>
        GROUP BY id,coin,product_id
        ) a
        #
        left JOIN ( SELECT `status`,fund_id,sum(interest_amount) as interest_amount from fund_income_record ) b on a.id
        = b.fund_id
        left JOIN wallet_agent_product c on a.product_id = c.product_id
        <where>
            <if test="agentUId != null">
                and c.uid = #{agentUId}
            </if>
            <if test="agentId != null">
                and c.agent_id = #{agentId}
            </if>
        </where>
        GROUP BY a.coin
    </select>
</mapper>
