<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianli.fund.dao.FundIncomeRecordMapper">

    <select id="selectAmount" resultType="com.tianli.fund.dto.FundIncomeAmountDTO">
        select
        sum(a.interest_amount) totalAmount,
        sum(if(a.status = 1 or a.status =2, a.interest_amount,0)) waitInterestAmount,
        sum(if(a.status = 3, a.interest_amount,0)) payInterestAmount,
        a.coin
        from wallet_agent_product c
        inner JOIN fund_record b on c.product_id = b.product_id
        inner JOIN fund_income_record a on b.id = a.fund_id
        <include refid="query"/>
        group by coin
    </select>

    <select id="selectIncomePage" resultType="com.tianli.fund.vo.FundIncomeRecordVO">
        select
        a.id,
        a.product_id productId,
        a.uid,
        a.product_name productName,
        a.coin,
        a.rate,
        a.hold_amount holdAmount,
        a.interest_amount interestAmount,
        a.status,
        a.create_time createTime,
        b.logo
        from fund_income_record a
        inner JOIN fund_record b on a.fund_id = b.id
        inner join wallet_agent_product c on b.product_id = c.product_id
        <include refid="query"/>
        order by a.create_time desc
    </select>

    <select id="selectWaitInterestCount" resultType="int">
        select count(*)
        from fund_income_record a
                 inner join wallet_agent_product b on a.product_id = b.product_id
        where a.status in (1, 2)
          and b.agent_id = #{agentId}
    </select>
    <select id="selectSummaryIncomePage" resultType="com.tianli.fund.vo.FundIncomeRecordVO">
        select
        a.product_name productName,

        a.coin,
        b.logo,
        sum(a.interest_amount) as interestAmount
        from fund_income_record a
        inner JOIN fund_record b on a.fund_id = b.id
        inner join wallet_agent_product c on b.product_id = c.product_id
        <include refid="query"/>
        group by b.id
        order by  interestAmount desc

    </select>

    <sql id="query">
        <where>
            <if test="query.agentId != null">
                c.agent_id = #{query.agentId}
            </if>
            <if test="query.uid != null">
                and a.uid = #{query.uid}
            </if>
            <if test="query.queryUid != null and query.queryUid != ''">
                and a.uid like concat('%',#{query.queryUid},'%')
            </if>
            <if test="query.queryProductId != null and query.queryProductId != ''">
                and a.product_id like concat('%',#{query.queryProductId},'%')
            </if>
            <if test="query.status != null and query.status.size > 0 ">
                and a.status in
                <foreach collection="query.status" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="query.startTime != null">
                and a.create_time >= #{query.startTime}
            </if>
            <if test="query.endTime != null">
                and a.create_time &lt;= #{query.endTime}
            </if>
            <if test="query.productId != null">
                and b.product_id = #{query.productId}
            </if>
            <if test="query.fundId != null">
                and a.fund_id = #{query.fundId}
            </if>
        </where>
    </sql>


</mapper>
