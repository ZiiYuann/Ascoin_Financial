<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianli.borrow.dao.BorrowCoinOrderMapper">
    <select id="selectBorrowCapitalSumByBorrowTime" resultType="decimal">
        SELECT
            ifnull(SUM(borrow_capital),0.0)
        FROM borrow_coin_order
        <where>
            <if test="startTime != null">
                borrow_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and borrow_time &lt;= #{endTime}
            </if>

        </where>
    </select>
    <select id="selectCountByBorrowTime" resultType="integer">
        SELECT
            ifnull(count(*),0)
        FROM borrow_coin_order
        <where>
            status = #{status}
            <if test="startTime != null">
                and borrow_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
             and borrow_time &lt;= #{endTime}
            </if>
        </where>
    </select>

    <select id="selectCumulativeInterestByQuery" resultType="decimal">
        select
            ifnull(SUM(cumulative_interest),0.0)
        from borrow_coin_order
        <where>
            <if test="queryUid != null and queryUid != ''">
                uid like concat('%',#{queryUid},'%')
            </if>
            <if test="queryOrderId != null and queryOrderId != ''">
                and id like concat('%',#{queryOrderId},'%')
            </if>
            <if test="minPledgeRate != null">
                and pledge_rete &gt;= #{minPledgeRate}
            </if>
            <if test="maxPledgeRate != null">
                and pledge_rete &lt;= #{maxPledgeRate}
            </if>
            <if test="startTime != null">
                and borrow_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and borrow_time &lt;= #{endTime}
            </if>
            <if test="status">
                and status in
                <foreach collection="status" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
    
    <update id="updatePledgeStatusByPledgeRate">
        update borrow_coin_order 
        set pledge_status = #{pledgeStatus} 
        <where>
            <if test="startPledgeRate != null">
                pledge_rate &gt;= #{startPledgeRate}
            </if>
            <if test="endPledgeRate != null">
                and pledge_rate &lt; #{endPledgeRate}
            </if>
          and status = 1
        </where>
    </update>


    <select id="selectAmountSumByQuery" resultType="com.tianli.borrow.vo.BorrowOrderAmountVO">
        SELECT
        ifnull(SUM(cumulative_interest),0) totalInterest,
        ifnull(SUM(borrow_capital),0) totalBorrowCapital,
        ifnull(SUM(wait_repay_capital),0) totalWaitRepayCapital,
        ifnull(SUM(wait_repay_interest),0) totalWaitRepayInterest
        FROM borrow_coin_order
        <where>
            <if test="queryUid != null and queryUid != ''">
                uid like concat('%',#{queryUid},'%')
            </if>
            <if test="queryOrderId != null and queryOrderId != ''">
                and id like concat('%',#{queryOrderId},'%')
            </if>
            <if test="minPledgeRate != null">
                and pledge_rete &gt;= #{minPledgeRate}
            </if>
            <if test="maxPledgeRate != null">
                and pledge_rete &lt;= #{maxPledgeRate}
            </if>
            <if test="startTime != null">
                and borrow_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and borrow_time &lt;= #{endTime}
            </if>
            <if test="status">
                and status in
                <foreach collection="status" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>

    </select>
</mapper>
