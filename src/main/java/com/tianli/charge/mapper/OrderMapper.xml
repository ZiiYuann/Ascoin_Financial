<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianli.charge.mapper.OrderMapper">
    <select id="selectByPage" resultType="com.tianli.financial.vo.OrderFinancialVO">
        SELECT
        o.uid,
        o.type as charge_type,
        o.status as charge_status,
        o.create_time,
        o.amount,
        o.order_no,
        record.product_type as type ,
        record.product_name as name,
        record.product_name_en as name_en,
        record.coin,
        record.product_term as term,
        record.rate,
        record.logo,
        record.product_id
        FROM `order` o
        INNER JOIN financial_record record on record.id = o.related_id
        WHERE 1=1

        <if test="query.uid != null">
            AND o.uid like concat('%',#{query.uid},'%')
        </if>
        <if test="query.orderNo != null">
            AND o.order_no like concat('%',#{query.orderNo},'%')
        </if>
        <if test="query.status != null">
            AND o.status = #{query.status}
        </if>
        <if test="query.productType != null">
            AND record.product_type = #{query.productType}
        </if>
        <if test="query.chargeType != null">
            AND o.type = #{query.chargeType}
        </if>
        <if test="query.name != null">
            AND ( record.product_name like concat('%',#{query.name},'%')
            OR record.product_name_en like concat('%',#{query.name},'%'))
        </if>
        <if test="query.coin != null">
            AND record.coin = #{query.coin}
        </if>
        <if test="query.startTime != null and query.endTime">
            AND o.create_time BETWEEN #{query.startTime} AND #{query.endTime}
        </if>

        <if test="query.chargeType == null and query.defaultChargeType != null and query.defaultChargeType.size > 0">
            AND o.type in
            <foreach item="item" index="index" collection="query.defaultChargeType" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>

        ORDER BY o.create_time desc
    </select>
    <select id="selectOrderSettleInfoVOPage" resultType="com.tianli.charge.vo.OrderSettleRecordVO">
        SELECT o.uid,
               o.type    as charge_type,
               record.id as record_id,
               income.income_amount,
               o.amount  as settle_amount,
               record.logo,
               record.purchase_time,
               record.start_income_time,
               record.redeem_time,
               record.coin,
               record.product_name,
               record.product_term,
               record.product_name_en
        FROM `order` o
                 INNER JOIN financial_record record on record.id = o.related_id and record.uid = o.uid
                 INNER JOIN financial_income_accrue income ON income.uid = o.uid and income.record_id = record.id
        WHERE o.uid = #{uid}
          and record.product_type = #{productType}
          and o.type = 'settle'
    </select>
    <select id="selectOrderChargeInfoVOPage" resultType="com.tianli.charge.vo.OrderChargeInfoVO">
        SELECT
        o.uid,
        o.order_no,o.type,o.status,o.create_time,o.complete_time,charge.txid,charge.from_address,charge.to_address,
        charge.fee as amount,charge.coin,charge.network as networkType,o.service_amount
        FROM `order` o
        INNER JOIN order_charge_info charge on charge.id = o.related_id
        WHERE 1 = 1
        <include refid="FinancialChargeQuery"/>
        ORDER BY o.create_time DESC

    </select>
    <select id="orderAmountSum" resultType="java.math.BigDecimal">
        SELECT
        sum(o.amount)
        FROM `order` o
        INNER JOIN order_charge_info charge on charge.id = o.related_id
        WHERE 1 = 1
        <include refid="FinancialChargeQuery"/>
    </select>
    <select id="serviceAmountSumByCompleteTime" resultType="java.math.BigDecimal">
        SELECT SUM(service_amount) FROM `order`
        WHERE type=#{query.chargeType}

        <if test="query.coin != null">
            AND coin = #{query.coin}
        </if>
        <if test="query.startTime != null and query.endTime">
            AND complete_time BETWEEN #{query.startTime} AND #{query.endTime}
        </if>
    </select>

    <sql id="FinancialChargeQuery">
        <if test="query.uid != null">
            AND o.uid like concat('%',#{query.uid},'%')
        </if>
        <if test="query.txid != null">
            AND charge.txid like concat('%',#{query.txid},'%')
        </if>
        <if test="query.chargeType != null">
            AND o.type = #{query.chargeType}
        </if>
        <if test="query.chargeStatus != null">
            AND o.status = #{query.chargeStatus}
        </if>
        <if test="query.coin != null">
            AND charge.coin = #{query.coin}
        </if>
        <if test="query.networkType != null">
            AND charge.network = #{query.networkType}
        </if>
        <if test="query.startTime != null and query.endTime">
            AND o.create_time BETWEEN #{query.startTime} AND #{query.endTime}
        </if>

    </sql>
</mapper>